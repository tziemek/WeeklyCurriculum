<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:WeeklyCurriculum.Wpf">
    <Style x:Key="MaterialDesignFlatToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Height" Value="40" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        ClipToBounds="True">
                        <Rectangle
                            x:Name="HoverEllipse"
                            Fill="Transparent"
                            RadiusX="2"
                            RadiusY="2"
                            Stroke="Transparent"
                            StrokeThickness="1" />
                        <Rectangle
                            x:Name="CheckedEllipse"
                            Fill="{TemplateBinding Background}"
                            RadiusX="2"
                            RadiusY="2"
                            RenderTransformOrigin="0.5, 0.5">
                            <Rectangle.RenderTransform>
                                <ScaleTransform
                                    x:Name="CheckedEllipseScale"
                                    CenterX="0.5"
                                    CenterY="0.5"
                                    ScaleX="1.0"
                                    ScaleY="1.0" />
                            </Rectangle.RenderTransform>
                        </Rectangle>
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="0.23"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="*" To="Checked">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames
                                                Storyboard.TargetName="CheckedEllipseScale"
                                                Storyboard.TargetProperty="ScaleX"
                                                Duration="0:0:0.2">
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.0" Value="0" />
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="1.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames
                                                Storyboard.TargetName="CheckedEllipseScale"
                                                Storyboard.TargetProperty="ScaleY"
                                                Duration="0:0:0.2">
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.0" Value="0" />
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="1.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="Checked" To="Unchecked">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames
                                                Storyboard.TargetName="CheckedEllipseScale"
                                                Storyboard.TargetProperty="ScaleX"
                                                Duration="0:0:0.2">
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.0" Value="1.0" />
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames
                                                Storyboard.TargetName="CheckedEllipseScale"
                                                Storyboard.TargetProperty="ScaleY"
                                                Duration="0:0:0.2">
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.0" Value="1.0" />
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="CheckedEllipseScale"
                                            Storyboard.TargetProperty="ScaleX"
                                            To="1.0"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="CheckedEllipseScale"
                                            Storyboard.TargetProperty="ScaleY"
                                            To="1.0"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="CheckedEllipseScale"
                                            Storyboard.TargetProperty="ScaleX"
                                            To="0"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="CheckedEllipseScale"
                                            Storyboard.TargetProperty="ScaleY"
                                            To="0"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="HoverEllipse" Property="Stroke" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}" />
                        </Trigger>
                        <!-- TODO
						<Trigger Property="IsFocused" Value="True">
							<Setter Property="BorderBrush" TargetName="normal" Value="{Binding (Custom:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
						</Trigger>
						-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="MaterialDesignFlatPrimaryToggleButton"
        BasedOn="{StaticResource MaterialDesignFlatToggleButton}"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource PrimaryHueLightBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkBrush}" />
    </Style>
    <Style
        x:Key="MaterialDesignFlatAccentToggleButton"
        BasedOn="{StaticResource MaterialDesignFlatToggleButton}"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource SecondaryAccentBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource SecondaryAccentForegroundBrush}" />
    </Style>
</ResourceDictionary>